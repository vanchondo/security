plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'jacoco'
    id 'maven-publish'
}

// Define the version variable and use it as the project version
def jenkinsBuildNumber = project.hasProperty('buildNumber') ? project.buildNumber : 'SNAPSHOT'

group 'com.vanchondo'
version "1.0.0-${jenkinsBuildNumber}"

def lombok_version = '1.18.+'
def springBoot_version = '3.1.+'
def jsonwebtoken_version = '0.11.+'
def apache_commons_version = "3.12.+"
def jacoco_version = '0.8.9'

def nexus_repo = "https://nexus.victoranchondo.com/repository/artifactory"

repositories {
    mavenCentral()
    maven {
        url = uri("${nexus_repo}")
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-webflux:${springBoot_version}"
    compileOnly "org.projectlombok:lombok:${lombok_version}"
    annotationProcessor "org.projectlombok:lombok:${lombok_version}"

    implementation "io.jsonwebtoken:jjwt-api:${jsonwebtoken_version}"
    implementation "io.jsonwebtoken:jjwt-impl:${jsonwebtoken_version}"
    implementation "io.jsonwebtoken:jjwt-gson:${jsonwebtoken_version}"

    implementation "org.apache.commons:commons-lang3:${apache_commons_version}"

    // Test libraries
    testImplementation ("org.springframework.boot:spring-boot-starter-test:${springBoot_version}") {
        exclude group:"org.junit.vintage", module:"junit-vintage-engine"
        exclude group:"junit", module:"junit:"
    }
    testImplementation("org.springframework.security:spring-security-test")
    testImplementation "io.projectreactor:reactor-test:${springBoot_version}"
    testCompileOnly "org.projectlombok:lombok:${lombok_version}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombok_version}"
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'security-library'
            from components.java
        }
    }
    repositories {
        maven {
            url = uri("${nexus_repo}")
            credentials {
                username = project.hasProperty('nexusUsername') ? project.nexusUsername : ""
                password = project.hasProperty('nexusPassword') ? project.nexusPassword : ""
            }
        }
    }
}

def jacocoExcludeList = [
        "**/configs/**",
        "**/dtos/**",
        "**/entities/**"
]

jacoco {
    toolVersion = "${jacoco_version}"
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('reports/jacoco')
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExcludeList)
        }))
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestCoverageVerification {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExcludeList)
        }))
    }
    violationRules {
        rule {
            limit {
                minimum = 0.80
            }
        }
    }
}